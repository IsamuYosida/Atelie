name: CI Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'  # Кэширование pip-пакетов для ускорения

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./pythonProject/requirements.txt
        pip install pytest pytest-cov

    - name: Wait for PostgreSQL
      run: sleep 5  # Даем время PostgreSQL запуститься

    - name: Run tests
      env:
        FLASK_APP: atelie.app
        FLASK_ENV: testing
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}  # Лучше использовать секрет
      run: |
        cd pythonProject
        pytest atelie/tests/ -v --cov=atelie --cov-report=xml --junitxml=test-results.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./pythonProject/coverage.xml
        flags: unittests

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./pythonProject/test-results.xml